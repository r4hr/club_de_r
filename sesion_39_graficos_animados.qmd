---
title: "Dale a tu gr치fico alegr칤a Macarena"
author: "R4HR"
date: "06/01/2024"
format: 
  html:
    code-fold: show
    code-summary: "Ver c칩digo"
    code-copy: hover
knitr: 
  opts_chunk: 
    warning: false
    message: false
editor: visual
---

# Dale a tu gr치fico alegr칤a Macarena

En la sesi칩n de hoy veremos dos m칠todos para a침adir interactividad a los gr치ficos con dos paquetes:

-   `gganimate`: para animar e incorporar movimiento a una visualizaci칩n.

-   `plotly`: que permite a침adir informaci칩n adicional a un gr치fico al pasar el mouse sobre 칠l.

> Tengan en cuenta que para sacar el m치ximo provecho de estos graficos necesitaremos un medio que soporte este tipo de gr치ficos, por ejemplo, *R Markdown, Xaringan, Quarto,* o bien *Shiny*.

# gganimate

Para este caso, vamos a necesitar los siguientes paquetes:

```{r}
#| label: librerias

library(readxl)        # Leer archivos de excel
library(tidyverse)     # Transformar y limpiar datos
library(ggplot2)       # Hacer gr치ficos
library(gganimate)     # A lo que vinimos, a animar los gr치ficos

```

## Bocaaa, Bocaaaa, Bocaaaaaa... 游눛游눝游눛

Primero un poema.

Arranquemos con una pavada. Desde que Diego Martinez, el actual DT de Boca, asumi칩 su cargo en Diciembre de 2023, una de las caracter칤sticas que tiene su gesti칩n (adem치s de jugar mejor), es que varios partidos los comenz칩 perdiendo, y termin칩 ganando. Al d칤a de hoy, (22 de mayo de 2024), **gan칩 12 partidos, de los cuales en 5 el primer gol lo hizo el rival**.

As칤 que qu칠 mejor ejemplo para graficar este caso de uso que aprovechando el vendaval de sensaciones que es mirar un partido de Boca Jrs. de la era Martinez.

En la fecha 2 del torneo local, Boca enfrent칩 como visitante a Central C칩rdoba de Santiago del Estero, que **convirtieron el primer gol a los 3' de comenzado el partido**, y luego hicieron el 2-0 en el tiempo a침adido en el final del primer tiempo.

Apenas comenz칩 el 2춿 tiempo, Equi Fernandez hizo el 2-1, la Bestia Merentiel lo empat칩 y lo di칩 vuelta a los 52' y 80' respectivamente, y cuando el partido estaba en tiempo a침adido, Equi Fernandez puso el 2-4 final.

Acomp치침enme a experimentar el vendaval de sensaciones que es vivir un partido de Boca en un gr치fico.

Vamos a usar el siguiente dataset:

```{r}
#| label: boca-data

# Carga de datos
boca <- read_excel("boca_vibes.xlsx")

# Explora las primeras 6 filas
head(boca)
```

El dataset contiene un detalle de los resultados minuto a minuto, podemos observar el primer gol de Central C칩rdoba convertido por Rodrigo Uriel Atencio a los 3 minutos que deja a Boca abajo en el marcador.

Para hacer el primer gr치fico necesitamos transformar un poco los datos para que las columnas de `central_cordoba` y de `boca` nos queden en una misma columna.

```{r}
#| label: data_transformation

partido <- boca |> 
  pivot_longer(cols = c(central_cordoba, boca), 
               names_to = "equipo", 
               values_to = "goles") |> 
  mutate(equipo = str_replace(equipo, "central_cordoba", "Central C칩rdoba"),
         equipo = str_replace(equipo, "boca", "Boca Jrs."))

# Ver c칩mo qued칩 el dataset
head(partido)
```

Tambi칠n vamos a agregar un par de columnas que van a reflejar el estado de 치nimo

Usemos un gr치fico de l칤neas para visualizar el partido.

```{r}
# Guardamos el gr치fico en un objeto llamado 'p'
p <-  ggplot(partido) +                                           # Datos
  geom_line(aes(x = minuto, y = goles, color = equipo),      # Tipo de gr치fico y variables
            linewidth = 1.1) +                               # Ancho de la l칤nea
  scale_color_manual(values = c("#103f79", "#EA0838")) +         # Colores custom
  theme_minimal() +                                          # Estilo del gr치fico
  labs(title = "Central C칩rdoba vs. Boca",
       x = "Minuto", y = "Goles",
       color = "Equipo") +
  geom_line(data = boca, aes(x = minuto, y = diferencia), linewidth = 1.3,
            linetype = 2)

# Veamos el gr치fico
p
```

Le podemos incorporar una l칤nea adicional para visualizar c칩mo iba el partido para Boca, en el cual podemos apreciar c칩mo arranca perdiendo, cerca del minuto '50 lo empata, y en el final lo da vuelta.

```{r}
#| label: boca_full_experience
#| warning: false
#| message: false

# A침adir una columna para agregar un emoji en funci칩n de la diferencia y los goles
boca <- boca |> 
  # Arranca el partido
  mutate(estado = if_else(diferencia == 0 , "meh", if_else( 
  # Primer gol de Central C칩rdoba
    diferencia < 0 & central_cordoba == 1, "cry",  if_else(
  # Segundo gol de Central C칩rdoba
      diferencia < 0 & central_cordoba == 2, "angry", if_else(
  # Primer gol de Boca
        diferencia < 0 & boca == 1, "fear", if_else(
  # Segundo gol de Boca
          diferencia == 1 & boca == 2, "biceps", if_else(
  # Tercer gol de Boca y cuarto gol
            diferencia == 1, "smile", "lol")
          )
        )
      ))))


# Mapear cada nombre de emoji a un emoji
# Link al paquete de emoji: https://github.com/hadley/emo
boca <- boca |> 
  mutate(emoji = map_chr(estado, emo::ji))

# Veamos como quedan los datos
head(boca)

# Hagamos el gr치fico final con anotaciones
p + 
  # A침adimos anotaciones en funci칩n de los goles
  geom_text(data = boca, aes(x = 15, y = 3.5, 
                             label = paste0("Central C칩rdoba: ", central_cordoba,
                                            "\nBoca: ", boca)),
            size = 4,        # Tama침o de la letra
            hjust = 0) +     # Alinea a la izquierda
# A침adimos anotaciones usando emojis
  geom_text(data = boca, aes(x = 15, y = 2.5, label = emoji), 
            size = 15) +
# A침adimos un "subt칤tulo"
  geom_text(data = boca, aes(x = 0, y = 4.5, label = paste0("Resultado: ", resultado)), hjust = 0) +
# Animemos el gr치fico
   transition_reveal(along = minuto)


```

## Ejemplo para la vida real

Vamos con algo simple, carguemos un subset hist칩rico de la Encuesta KIWI de Sueldos de RH:

```{r}
#| label: dame kiwi

# Cargando datos
kiwi <- read.csv("encuestas_kiwi.csv", sep = ";")

# Explorar 6 filas
head(kiwi)
```

Empecemos con algo simple, calculemos la mediana salarial por puesto y por a침o:

```{r}
#| label: calcular mediana

# Creamos una tabla con la mediana salarial por puesto por a침o
mediana_anual <- kiwi |>                         # Creamos una tabla nueva
  group_by(anio, puesto) |>                      # Agrupamos por anio y puesto
  summarise(mediana = median(sueldo_bruto)) |>   # Calculamos la mediana salarial
  ungroup()

mediana_anual

```

### Primer gr치fico

Vamos a hacer un gr치fico base, en el cual calcularemos la mediana salarial por a침o por cada puesto

```{r}
#| label: Grafico mediana

# Construimos el gr치fico
p <- ggplot(mediana_anual, aes(x = anio, y = mediana, fill = puesto)) +
  geom_col(position = "dodge") +
  # Modifica c칩mo se muestran las etiquetas del eje y
  scale_y_continuous(labels = scales::comma_format(big.mark = ".", 
                                                   decimal.mark = ",")) +
  labs(title = "Evoloci칩n de la Mediana Salarial por Puesto",
       subtitle = "En Pesos Argentinos",
       x = "A침o", y = "Mediana (AR$)", 
       fill = "Puesto", 
       caption = "Fuente: Encuesta KIWI de Sueldos de RH") +
  theme_minimal() # Modifica el estilo del gr치fico

p
```

Una posible animaci칩n podr칤a ser la siguiente:

```{r}
#| label: Animaci칩n mediana anual

# Animate gr치fico! XD
p +
  transition_states(anio, 
                    wrap = FALSE) + # Impide que transicione del final al inicio
  shadow_mark() +   # Mantiene el elemento anterior
  enter_fade()      # Los elementos aparecen con un efecto de desvanecer
```

## Otro ejemplo

En los casos anteriores ve칤amos c칩mo los gr치ficos se mueven autom치ticamente. Pero, nosotros podemos controlar que el gr치fico se mueva cuando nosotros lo necesitemos, en funci칩n de la historia que necesitemos contar

```{r}
#| label: Distribuci칩n salarial por g칠nero

# Creamos un nuevo gr치fico
q <- kiwi |> 
  # Filtramos los datos
  filter(anio == 2023, genero %in% c("Hombre cis", "Mujer cis")) |> 
  # Creamos un scatterplot
  ggplot(aes(x = origen_capital, y = sueldo_bruto, colour = genero)) + 
  geom_point(size = 4, alpha = 0.4, position = position_jitter(0.2)) +
  # Modifica las etiquetas del eje y
  scale_y_continuous(label = scales::comma_format(big.mark = ".", 
                                                  decimal.mark = ",")) +
  theme_minimal()

# Visualizar el gr치fico
q +
  labs(title = "Relaci칩n entre Sueldo y G칠nero",
       x = NULL, y = "Sueldo Bruto (AR$)", 
       color = "G칠nero",
       fuente = "Fuente: Encuesta KIWI de Sueldos de RH")
```

Ahora veamos qu칠 ocurre cuando animamos por puesto

```{r}
#| label: Animando distribuci칩n

# A침adimos visualizaci칩n
q +
  transition_states(puesto,                 # Animamos por la variable puesto
                    transition_length = 3, 
                    state_length = 1) +
  shadow_wake(wake_length = 0.05) + 
  labs(title = "Relaci칩n entre Sueldo y G칠nero",
       subtitle = "Puesto: {next_state}",   # Cambia el subt칤tulo en funci칩n de la animaci칩n
       x = NULL, y = "Sueldo Bruto (AR$)", 
       color = "Capital",
       fuente = "Fuente: Encuesta KIWI de SUeldos de RH")



```

# plotly

`plotly` es un paquete que le agrega cierta interacci칩n a los gr치ficos, equivalente a los *tooltips* de otras herramientas (pasas el mouse por encima de un gr치fico y se abre un cuadrito de informaci칩n. Esto permite agregar m치s informaci칩n al gr치fico cuando est치s presentando.

Veamos un ejemplo. Calculemos la *satisfacci칩n promedio* por puesto y g칠nero en 2023.

```{r}
#| label: Datos de ejemplo

# Cargamos la encuesta kiwi
kiwi <- read.csv("encuestas_kiwi.csv", sep = ";")

# Calulamos la satisfacci칩n promedio para el a침o 2023 seg칰n g칠nero
feliz <- kiwi |> 
  filter(!is.na(satisfaccion), 
         anio == 2023,
         genero %in% c("Hombre cis", "Mujer cis")) |> 
  group_by(puesto, genero) |> 
  summarise(satisfaccion_promedio = round(mean(satisfaccion),1),
            Respuestas = n()) 

# Veamos la tabla final
feliz  
```

Veamos el gr치fico base con el que trabajaremos:

```{r}
#| label: Gr치fico de satisfacci칩n


y <- ggplot(feliz, aes(x = satisfaccion_promedio, y = puesto, fill = genero, 
                       a = Respuestas)) +
  geom_col(position = "dodge") + 
  labs(title = "Satisfacci칩n Promedio por Puesto", 
       x = "Satisfacci칩n",
       y = NULL, 
       fill = "G칠nero") + 
  theme_minimal()

y
```

Y ahora sumamos la magia de `plotly`.

```{r}
library(plotly)

ggplotly(y)
```

Una de las posibilidades interesantes que ofrece `plotly` es la posibilidad de hacer zoom en alguna secci칩n del gr치fico:

```{r}
#| label: jerarquicos


jerarquicos <- kiwi |> 
  filter(sueldo_dolar < 2000,
         puesto %in% c("HRBP", "Gerente", "Jefe", "Responsable"))

# Creamos un gr치fico
z <- ggplot(jerarquicos, aes(x = anios_empresa, 
                             y = sueldo_dolar, 
                             color = puesto)) +
  geom_point(size = 2, alpha = 0.4) +
  theme_minimal() +
  labs(title = "Relaci칩n entre sueldo y antig칲edad",
       x = "Antig칲edad", y = "Sueldo en U$S",
       caption = "Fuente: Encuesta KIWI de Sueldos de RH", 
       color = "Puesto")

# Ver el gr치fico
ggplotly(z)
```

# Referencias y Recursos

Estos son algunas de las referencias y recursos que usamos para armar esta sesi칩n

## gganimate

gganimate Live Cookbook: [Slides](https://data-imaginist.com/slides/rstudioconf2019/)

[Cheatsheet](https://rstudio.github.io/cheatsheets/gganimate.pdf)

[Building an animation step by step with gganimate](https://www.alexcookson.com/post/2020-10-18-building-an-animation-step-by-step-with-gganimate/)

P치gina de [gganimate](https://gganimate.com/index.html)

## plotly

Interactive web-based data visualization with R, plotly, and shiny, Cap 33 [Improving ggplotly](https://plotly-r.com/improving-ggplotly)

P치gina de [plotly](https://plotly.com/ggplot2/)

## R4HR Club de R para RRHH

Seguinos en nuestras redes sociales para estar al tanto de todas nuestras novedades y actividades: [r4hrclub \| Twitter, Instagram, Facebook \| Linktree](https://linktr.ee/r4hrclub)

Pod칠s descargar el script en [Google Drive](https://drive.google.com/drive/folders/1qZ7KsvFP0mCukOpoBsusbcSaFJ3TZkMM?usp=drive_link) y ver la grabaci칩n de la sesi칩n en YouTube:

{{< video https://youtu.be/LL65RtNRmaQ >}}
